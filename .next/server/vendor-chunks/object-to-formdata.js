/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/object-to-formdata";
exports.ids = ["vendor-chunks/object-to-formdata"];
exports.modules = {

/***/ "(ssr)/./node_modules/object-to-formdata/src/index.js":
/*!******************************************************!*\
  !*** ./node_modules/object-to-formdata/src/index.js ***!
  \******************************************************/
/***/ ((module) => {

eval("function isUndefined(value) {\n  return value === undefined;\n}\n\nfunction isNull(value) {\n  return value === null;\n}\n\nfunction isBoolean(value) {\n  return typeof value === 'boolean';\n}\n\nfunction isObject(value) {\n  return value === Object(value);\n}\n\nfunction isArray(value) {\n  return Array.isArray(value);\n}\n\nfunction isDate(value) {\n  return value instanceof Date;\n}\n\nfunction isBlob(value, isReactNative) {\n  return isReactNative\n    ? isObject(value) && !isUndefined(value.uri)\n    : isObject(value) &&\n        typeof value.size === 'number' &&\n        typeof value.type === 'string' &&\n        typeof value.slice === 'function';\n}\n\nfunction isFile(value, isReactNative) {\n  return (\n    isBlob(value, isReactNative) &&\n    typeof value.name === 'string' &&\n    (isObject(value.lastModifiedDate) || typeof value.lastModified === 'number')\n  );\n}\n\nfunction initCfg(value) {\n  return isUndefined(value) ? false : value;\n}\n\nfunction serialize(obj, cfg, fd, pre) {\n  cfg = cfg || {};\n  fd = fd || new FormData();\n\n  cfg.indices = initCfg(cfg.indices);\n  cfg.nullsAsUndefineds = initCfg(cfg.nullsAsUndefineds);\n  cfg.booleansAsIntegers = initCfg(cfg.booleansAsIntegers);\n  cfg.allowEmptyArrays = initCfg(cfg.allowEmptyArrays);\n  cfg.noAttributesWithArrayNotation = initCfg(\n    cfg.noAttributesWithArrayNotation,\n  );\n  cfg.noFilesWithArrayNotation = initCfg(cfg.noFilesWithArrayNotation);\n  cfg.dotsForObjectNotation = initCfg(cfg.dotsForObjectNotation);\n\n  const isReactNative = typeof fd.getParts === 'function';\n\n  if (isUndefined(obj)) {\n    return fd;\n  } else if (isNull(obj)) {\n    if (!cfg.nullsAsUndefineds) {\n      fd.append(pre, '');\n    }\n  } else if (isBoolean(obj)) {\n    if (cfg.booleansAsIntegers) {\n      fd.append(pre, obj ? 1 : 0);\n    } else {\n      fd.append(pre, obj);\n    }\n  } else if (isArray(obj)) {\n    if (obj.length) {\n      obj.forEach((value, index) => {\n        let key = pre + '[' + (cfg.indices ? index : '') + ']';\n\n        if (\n          cfg.noAttributesWithArrayNotation ||\n          (cfg.noFilesWithArrayNotation && isFile(value, isReactNative))\n        ) {\n          key = pre;\n        }\n\n        serialize(value, cfg, fd, key);\n      });\n    } else if (cfg.allowEmptyArrays) {\n      fd.append(cfg.noAttributesWithArrayNotation ? pre : pre + '[]', '');\n    }\n  } else if (isDate(obj)) {\n    fd.append(pre, obj.toISOString());\n  } else if (isObject(obj) && !isBlob(obj, isReactNative)) {\n    Object.keys(obj).forEach((prop) => {\n      const value = obj[prop];\n\n      if (isArray(value)) {\n        while (prop.length > 2 && prop.lastIndexOf('[]') === prop.length - 2) {\n          prop = prop.substring(0, prop.length - 2);\n        }\n      }\n\n      const key = pre\n        ? cfg.dotsForObjectNotation\n          ? pre + '.' + prop\n          : pre + '[' + prop + ']'\n        : prop;\n\n      serialize(value, cfg, fd, key);\n    });\n  } else {\n    fd.append(pre, obj);\n  }\n\n  return fd;\n}\n\nmodule.exports = {\n  serialize,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvb2JqZWN0LXRvLWZvcm1kYXRhL3NyYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsT0FBTztBQUNQLE1BQU07QUFDTjtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMLElBQUk7QUFDSjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2VycmUtbGFiLXNpdGUvLi9ub2RlX21vZHVsZXMvb2JqZWN0LXRvLWZvcm1kYXRhL3NyYy9pbmRleC5qcz8xYjI2Il0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGlzVW5kZWZpbmVkKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSA9PT0gdW5kZWZpbmVkO1xufVxuXG5mdW5jdGlvbiBpc051bGwodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlID09PSBudWxsO1xufVxuXG5mdW5jdGlvbiBpc0Jvb2xlYW4odmFsdWUpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ2Jvb2xlYW4nO1xufVxuXG5mdW5jdGlvbiBpc09iamVjdCh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgPT09IE9iamVjdCh2YWx1ZSk7XG59XG5cbmZ1bmN0aW9uIGlzQXJyYXkodmFsdWUpIHtcbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkodmFsdWUpO1xufVxuXG5mdW5jdGlvbiBpc0RhdGUodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgRGF0ZTtcbn1cblxuZnVuY3Rpb24gaXNCbG9iKHZhbHVlLCBpc1JlYWN0TmF0aXZlKSB7XG4gIHJldHVybiBpc1JlYWN0TmF0aXZlXG4gICAgPyBpc09iamVjdCh2YWx1ZSkgJiYgIWlzVW5kZWZpbmVkKHZhbHVlLnVyaSlcbiAgICA6IGlzT2JqZWN0KHZhbHVlKSAmJlxuICAgICAgICB0eXBlb2YgdmFsdWUuc2l6ZSA9PT0gJ251bWJlcicgJiZcbiAgICAgICAgdHlwZW9mIHZhbHVlLnR5cGUgPT09ICdzdHJpbmcnICYmXG4gICAgICAgIHR5cGVvZiB2YWx1ZS5zbGljZSA9PT0gJ2Z1bmN0aW9uJztcbn1cblxuZnVuY3Rpb24gaXNGaWxlKHZhbHVlLCBpc1JlYWN0TmF0aXZlKSB7XG4gIHJldHVybiAoXG4gICAgaXNCbG9iKHZhbHVlLCBpc1JlYWN0TmF0aXZlKSAmJlxuICAgIHR5cGVvZiB2YWx1ZS5uYW1lID09PSAnc3RyaW5nJyAmJlxuICAgIChpc09iamVjdCh2YWx1ZS5sYXN0TW9kaWZpZWREYXRlKSB8fCB0eXBlb2YgdmFsdWUubGFzdE1vZGlmaWVkID09PSAnbnVtYmVyJylcbiAgKTtcbn1cblxuZnVuY3Rpb24gaW5pdENmZyh2YWx1ZSkge1xuICByZXR1cm4gaXNVbmRlZmluZWQodmFsdWUpID8gZmFsc2UgOiB2YWx1ZTtcbn1cblxuZnVuY3Rpb24gc2VyaWFsaXplKG9iaiwgY2ZnLCBmZCwgcHJlKSB7XG4gIGNmZyA9IGNmZyB8fCB7fTtcbiAgZmQgPSBmZCB8fCBuZXcgRm9ybURhdGEoKTtcblxuICBjZmcuaW5kaWNlcyA9IGluaXRDZmcoY2ZnLmluZGljZXMpO1xuICBjZmcubnVsbHNBc1VuZGVmaW5lZHMgPSBpbml0Q2ZnKGNmZy5udWxsc0FzVW5kZWZpbmVkcyk7XG4gIGNmZy5ib29sZWFuc0FzSW50ZWdlcnMgPSBpbml0Q2ZnKGNmZy5ib29sZWFuc0FzSW50ZWdlcnMpO1xuICBjZmcuYWxsb3dFbXB0eUFycmF5cyA9IGluaXRDZmcoY2ZnLmFsbG93RW1wdHlBcnJheXMpO1xuICBjZmcubm9BdHRyaWJ1dGVzV2l0aEFycmF5Tm90YXRpb24gPSBpbml0Q2ZnKFxuICAgIGNmZy5ub0F0dHJpYnV0ZXNXaXRoQXJyYXlOb3RhdGlvbixcbiAgKTtcbiAgY2ZnLm5vRmlsZXNXaXRoQXJyYXlOb3RhdGlvbiA9IGluaXRDZmcoY2ZnLm5vRmlsZXNXaXRoQXJyYXlOb3RhdGlvbik7XG4gIGNmZy5kb3RzRm9yT2JqZWN0Tm90YXRpb24gPSBpbml0Q2ZnKGNmZy5kb3RzRm9yT2JqZWN0Tm90YXRpb24pO1xuXG4gIGNvbnN0IGlzUmVhY3ROYXRpdmUgPSB0eXBlb2YgZmQuZ2V0UGFydHMgPT09ICdmdW5jdGlvbic7XG5cbiAgaWYgKGlzVW5kZWZpbmVkKG9iaikpIHtcbiAgICByZXR1cm4gZmQ7XG4gIH0gZWxzZSBpZiAoaXNOdWxsKG9iaikpIHtcbiAgICBpZiAoIWNmZy5udWxsc0FzVW5kZWZpbmVkcykge1xuICAgICAgZmQuYXBwZW5kKHByZSwgJycpO1xuICAgIH1cbiAgfSBlbHNlIGlmIChpc0Jvb2xlYW4ob2JqKSkge1xuICAgIGlmIChjZmcuYm9vbGVhbnNBc0ludGVnZXJzKSB7XG4gICAgICBmZC5hcHBlbmQocHJlLCBvYmogPyAxIDogMCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGZkLmFwcGVuZChwcmUsIG9iaik7XG4gICAgfVxuICB9IGVsc2UgaWYgKGlzQXJyYXkob2JqKSkge1xuICAgIGlmIChvYmoubGVuZ3RoKSB7XG4gICAgICBvYmouZm9yRWFjaCgodmFsdWUsIGluZGV4KSA9PiB7XG4gICAgICAgIGxldCBrZXkgPSBwcmUgKyAnWycgKyAoY2ZnLmluZGljZXMgPyBpbmRleCA6ICcnKSArICddJztcblxuICAgICAgICBpZiAoXG4gICAgICAgICAgY2ZnLm5vQXR0cmlidXRlc1dpdGhBcnJheU5vdGF0aW9uIHx8XG4gICAgICAgICAgKGNmZy5ub0ZpbGVzV2l0aEFycmF5Tm90YXRpb24gJiYgaXNGaWxlKHZhbHVlLCBpc1JlYWN0TmF0aXZlKSlcbiAgICAgICAgKSB7XG4gICAgICAgICAga2V5ID0gcHJlO1xuICAgICAgICB9XG5cbiAgICAgICAgc2VyaWFsaXplKHZhbHVlLCBjZmcsIGZkLCBrZXkpO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmIChjZmcuYWxsb3dFbXB0eUFycmF5cykge1xuICAgICAgZmQuYXBwZW5kKGNmZy5ub0F0dHJpYnV0ZXNXaXRoQXJyYXlOb3RhdGlvbiA/IHByZSA6IHByZSArICdbXScsICcnKTtcbiAgICB9XG4gIH0gZWxzZSBpZiAoaXNEYXRlKG9iaikpIHtcbiAgICBmZC5hcHBlbmQocHJlLCBvYmoudG9JU09TdHJpbmcoKSk7XG4gIH0gZWxzZSBpZiAoaXNPYmplY3Qob2JqKSAmJiAhaXNCbG9iKG9iaiwgaXNSZWFjdE5hdGl2ZSkpIHtcbiAgICBPYmplY3Qua2V5cyhvYmopLmZvckVhY2goKHByb3ApID0+IHtcbiAgICAgIGNvbnN0IHZhbHVlID0gb2JqW3Byb3BdO1xuXG4gICAgICBpZiAoaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgd2hpbGUgKHByb3AubGVuZ3RoID4gMiAmJiBwcm9wLmxhc3RJbmRleE9mKCdbXScpID09PSBwcm9wLmxlbmd0aCAtIDIpIHtcbiAgICAgICAgICBwcm9wID0gcHJvcC5zdWJzdHJpbmcoMCwgcHJvcC5sZW5ndGggLSAyKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBjb25zdCBrZXkgPSBwcmVcbiAgICAgICAgPyBjZmcuZG90c0Zvck9iamVjdE5vdGF0aW9uXG4gICAgICAgICAgPyBwcmUgKyAnLicgKyBwcm9wXG4gICAgICAgICAgOiBwcmUgKyAnWycgKyBwcm9wICsgJ10nXG4gICAgICAgIDogcHJvcDtcblxuICAgICAgc2VyaWFsaXplKHZhbHVlLCBjZmcsIGZkLCBrZXkpO1xuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIGZkLmFwcGVuZChwcmUsIG9iaik7XG4gIH1cblxuICByZXR1cm4gZmQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBzZXJpYWxpemUsXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/object-to-formdata/src/index.js\n");

/***/ })

};
;