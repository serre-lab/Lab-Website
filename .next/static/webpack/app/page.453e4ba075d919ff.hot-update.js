/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Fcell%2Findex.js%22%2C%22ids%22%3A%5B%22RichTextCell%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Falign%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22AlignFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fblockquote%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22BlockquoteFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fblocks%2Fcomponent%2Findex.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fblocks%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22BlocksFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fdebug%2FtestRecorder%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22TestRecorderFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fdebug%2FtreeView%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22TreeViewFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fformat%2Fbold%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22BoldFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fformat%2FinlineCode%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22InlineCodeFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fformat%2Fitalic%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22ItalicFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fformat%2Fstrikethrough%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22StrikethroughFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fformat%2Fsubscript%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22SubscriptFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fformat%2Fsuperscript%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22SuperscriptFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fformat%2Funderline%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22UnderlineFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fheading%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22HeadingFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2FhorizontalRule%2Fcomponent%2Findex.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2FhorizontalRule%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22HorizontalRuleFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Findent%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22IndentFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Flink%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22LinkFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Flists%2Fchecklist%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22ChecklistFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Flists%2ForderedList%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22OrderedListFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Flists%2FunorderedList%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22UnorderedListFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FlexicalPluginToLexical%2Fconverter%2Fconverters%2Fheading%2Fclient.js%22%2C%22ids%22%3A%5B%22HeadingConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FlexicalPluginToLexical%2Fconverter%2Fconverters%2Flink%2Fclient.js%22%2C%22ids%22%3A%5B%22LinkConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FlexicalPluginToLexical%2Fconverter%2Fconverters%2Flist%2Fclient.js%22%2C%22ids%22%3A%5B%22ListConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FlexicalPluginToLexical%2Fconverter%2Fconverters%2FlistItem%2Fclient.js%22%2C%22ids%22%3A%5B%22ListItemConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FlexicalPluginToLexical%2Fconverter%2Fconverters%2Fquote%2Fclient.js%22%2C%22ids%22%3A%5B%22QuoteConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FlexicalPluginToLexical%2Fconverter%2Fconverters%2Funknown%2Fclient.js%22%2C%22ids%22%3A%5B%22UnknownConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FlexicalPluginToLexical%2Fconverter%2Fconverters%2Fupload%2Fclient.js%22%2C%22ids%22%3A%5B%22UploadConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FlexicalPluginToLexical%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22LexicalPluginToLexicalFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FlexicalPluginToLexical%2Fnodes%2FunknownConvertedNode%2Findex.scss%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FslateToLexical%2Fconverter%2Fconverters%2Fblockquote%2Fclient.js%22%2C%22ids%22%3A%5B%22BlockquoteConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FslateToLexical%2Fconverter%2Fconverters%2Fheading%2Fclient.js%22%2C%22ids%22%3A%5B%22HeadingConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FslateToLexical%2Fconverter%2Fconverters%2Findent%2Fclient.js%22%2C%22ids%22%3A%5B%22IndentConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FslateToLexical%2Fconverter%2Fconverters%2Flink%2Fclient.js%22%2C%22ids%22%3A%5B%22LinkConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FslateToLexical%2Fconverter%2Fconverters%2FlistItem%2Fclient.js%22%2C%22ids%22%3A%5B%22ListItemConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FslateToLexical%2Fconverter%2Fconverters%2ForderedList%2Fclient.js%22%2C%22ids%22%3A%5B%22OrderedListConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FslateToLexical%2Fconverter%2Fconverters%2Frelationship%2Fclient.js%22%2C%22ids%22%3A%5B%22RelationshipConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FslateToLexical%2Fconverter%2Fconverters%2Funknown%2Fclient.js%22%2C%22ids%22%3A%5B%22UnknownConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FslateToLexical%2Fconverter%2Fconverters%2FunorderedList%2Fclient.js%22%2C%22ids%22%3A%5B%22UnorderedListConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FslateToLexical%2Fconverter%2Fconverters%2Fupload%2Fclient.js%22%2C%22ids%22%3A%5B%22UploadConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FslateToLexical%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22SlateToLexicalFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FslateToLexical%2Fnodes%2FunknownConvertedNode%2Findex.scss%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fparagraph%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22ParagraphFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Frelationship%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22RelationshipFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Frelationship%2Fnodes%2Fcomponents%2FRelationshipComponent.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Ftoolbars%2Ffixed%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22FixedToolbarFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Ftoolbars%2Finline%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22InlineToolbarFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fupload%2Fcomponent%2Findex.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fupload%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22UploadFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Findex.js%22%2C%22ids%22%3A%5B%22RichTextField%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Flexical%2Fconfig%2Fclient%2FEditorConfigProvider.js%22%2C%22ids%22%3A%5B%22EditorConfigProvider%22%2C%22useEditorConfigContext%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Flexical%2Fconfig%2Fclient%2Fsanitize.js%22%2C%22ids%22%3A%5B%22sanitizeClientEditorConfig%22%2C%22sanitizeClientFeatures%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Flexical%2Fplugins%2FSlashMenu%2FLexicalTypeaheadMenuPlugin%2Findex.js%22%2C%22ids%22%3A%5B%22ENABLE_SLASH_MENU_COMMAND%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Flexical%2Ftheme%2FEditorTheme.scss%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Fui%2Fdist%2Felements%2FViewDescription%2Findex.js%22%2C%22ids%22%3A%5B%22*%22%2C%22ViewDescription%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Fui%2Fdist%2Ffields%2FHiddenInput%2Findex.js%22%2C%22ids%22%3A%5B%22HiddenInput%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Fui%2Fdist%2Fforms%2FFieldDescription%2Findex.js%22%2C%22ids%22%3A%5B%22FieldDescription%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fsrc%2Fcomponents%2FHeroImageRight%2FHeroImageRight.tsx%22%2C%22ids%22%3A%5B%22HeroImageRight%22%5D%7D&server=false!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Fcell%2Findex.js%22%2C%22ids%22%3A%5B%22RichTextCell%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Falign%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22AlignFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fblockquote%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22BlockquoteFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fblocks%2Fcomponent%2Findex.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fblocks%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22BlocksFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fdebug%2FtestRecorder%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22TestRecorderFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fdebug%2FtreeView%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22TreeViewFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fformat%2Fbold%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22BoldFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fformat%2FinlineCode%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22InlineCodeFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fformat%2Fitalic%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22ItalicFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fformat%2Fstrikethrough%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22StrikethroughFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fformat%2Fsubscript%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22SubscriptFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fformat%2Fsuperscript%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22SuperscriptFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fformat%2Funderline%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22UnderlineFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fheading%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22HeadingFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2FhorizontalRule%2Fcomponent%2Findex.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2FhorizontalRule%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22HorizontalRuleFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Findent%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22IndentFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Flink%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22LinkFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Flists%2Fchecklist%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22ChecklistFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Flists%2ForderedList%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22OrderedListFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Flists%2FunorderedList%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22UnorderedListFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FlexicalPluginToLexical%2Fconverter%2Fconverters%2Fheading%2Fclient.js%22%2C%22ids%22%3A%5B%22HeadingConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FlexicalPluginToLexical%2Fconverter%2Fconverters%2Flink%2Fclient.js%22%2C%22ids%22%3A%5B%22LinkConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FlexicalPluginToLexical%2Fconverter%2Fconverters%2Flist%2Fclient.js%22%2C%22ids%22%3A%5B%22ListConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FlexicalPluginToLexical%2Fconverter%2Fconverters%2FlistItem%2Fclient.js%22%2C%22ids%22%3A%5B%22ListItemConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FlexicalPluginToLexical%2Fconverter%2Fconverters%2Fquote%2Fclient.js%22%2C%22ids%22%3A%5B%22QuoteConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FlexicalPluginToLexical%2Fconverter%2Fconverters%2Funknown%2Fclient.js%22%2C%22ids%22%3A%5B%22UnknownConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FlexicalPluginToLexical%2Fconverter%2Fconverters%2Fupload%2Fclient.js%22%2C%22ids%22%3A%5B%22UploadConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FlexicalPluginToLexical%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22LexicalPluginToLexicalFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FlexicalPluginToLexical%2Fnodes%2FunknownConvertedNode%2Findex.scss%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FslateToLexical%2Fconverter%2Fconverters%2Fblockquote%2Fclient.js%22%2C%22ids%22%3A%5B%22BlockquoteConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FslateToLexical%2Fconverter%2Fconverters%2Fheading%2Fclient.js%22%2C%22ids%22%3A%5B%22HeadingConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FslateToLexical%2Fconverter%2Fconverters%2Findent%2Fclient.js%22%2C%22ids%22%3A%5B%22IndentConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FslateToLexical%2Fconverter%2Fconverters%2Flink%2Fclient.js%22%2C%22ids%22%3A%5B%22LinkConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FslateToLexical%2Fconverter%2Fconverters%2FlistItem%2Fclient.js%22%2C%22ids%22%3A%5B%22ListItemConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FslateToLexical%2Fconverter%2Fconverters%2ForderedList%2Fclient.js%22%2C%22ids%22%3A%5B%22OrderedListConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FslateToLexical%2Fconverter%2Fconverters%2Frelationship%2Fclient.js%22%2C%22ids%22%3A%5B%22RelationshipConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FslateToLexical%2Fconverter%2Fconverters%2Funknown%2Fclient.js%22%2C%22ids%22%3A%5B%22UnknownConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FslateToLexical%2Fconverter%2Fconverters%2FunorderedList%2Fclient.js%22%2C%22ids%22%3A%5B%22UnorderedListConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FslateToLexical%2Fconverter%2Fconverters%2Fupload%2Fclient.js%22%2C%22ids%22%3A%5B%22UploadConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FslateToLexical%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22SlateToLexicalFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FslateToLexical%2Fnodes%2FunknownConvertedNode%2Findex.scss%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fparagraph%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22ParagraphFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Frelationship%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22RelationshipFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Frelationship%2Fnodes%2Fcomponents%2FRelationshipComponent.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Ftoolbars%2Ffixed%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22FixedToolbarFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Ftoolbars%2Finline%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22InlineToolbarFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fupload%2Fcomponent%2Findex.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fupload%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22UploadFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Findex.js%22%2C%22ids%22%3A%5B%22RichTextField%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Flexical%2Fconfig%2Fclient%2FEditorConfigProvider.js%22%2C%22ids%22%3A%5B%22EditorConfigProvider%22%2C%22useEditorConfigContext%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Flexical%2Fconfig%2Fclient%2Fsanitize.js%22%2C%22ids%22%3A%5B%22sanitizeClientEditorConfig%22%2C%22sanitizeClientFeatures%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Flexical%2Fplugins%2FSlashMenu%2FLexicalTypeaheadMenuPlugin%2Findex.js%22%2C%22ids%22%3A%5B%22ENABLE_SLASH_MENU_COMMAND%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Flexical%2Ftheme%2FEditorTheme.scss%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Fui%2Fdist%2Felements%2FViewDescription%2Findex.js%22%2C%22ids%22%3A%5B%22*%22%2C%22ViewDescription%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Fui%2Fdist%2Ffields%2FHiddenInput%2Findex.js%22%2C%22ids%22%3A%5B%22HiddenInput%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Fui%2Fdist%2Fforms%2FFieldDescription%2Findex.js%22%2C%22ids%22%3A%5B%22FieldDescription%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fsrc%2Fcomponents%2FHeroImageRight%2FHeroImageRight.tsx%22%2C%22ids%22%3A%5B%22HeroImageRight%22%5D%7D&server=false! ***!
  \****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/cell/index.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/cell/index.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/align/feature.client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/align/feature.client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/blockquote/feature.client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/blockquote/feature.client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/blocks/component/index.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/blocks/component/index.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/blocks/feature.client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/blocks/feature.client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/debug/testRecorder/feature.client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/debug/testRecorder/feature.client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/debug/treeView/feature.client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/debug/treeView/feature.client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/format/bold/feature.client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/format/bold/feature.client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/format/inlineCode/feature.client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/format/inlineCode/feature.client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/format/italic/feature.client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/format/italic/feature.client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/format/strikethrough/feature.client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/format/strikethrough/feature.client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/format/subscript/feature.client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/format/subscript/feature.client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/format/superscript/feature.client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/format/superscript/feature.client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/format/underline/feature.client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/format/underline/feature.client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/heading/feature.client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/heading/feature.client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/horizontalRule/component/index.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/horizontalRule/component/index.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/horizontalRule/feature.client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/horizontalRule/feature.client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/indent/feature.client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/indent/feature.client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/link/feature.client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/link/feature.client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/lists/checklist/feature.client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/lists/checklist/feature.client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/lists/orderedList/feature.client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/lists/orderedList/feature.client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/lists/unorderedList/feature.client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/lists/unorderedList/feature.client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/lexicalPluginToLexical/converter/converters/heading/client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/lexicalPluginToLexical/converter/converters/heading/client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/lexicalPluginToLexical/converter/converters/link/client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/lexicalPluginToLexical/converter/converters/link/client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/lexicalPluginToLexical/converter/converters/list/client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/lexicalPluginToLexical/converter/converters/list/client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/lexicalPluginToLexical/converter/converters/listItem/client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/lexicalPluginToLexical/converter/converters/listItem/client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/lexicalPluginToLexical/converter/converters/quote/client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/lexicalPluginToLexical/converter/converters/quote/client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/lexicalPluginToLexical/converter/converters/unknown/client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/lexicalPluginToLexical/converter/converters/unknown/client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/lexicalPluginToLexical/converter/converters/upload/client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/lexicalPluginToLexical/converter/converters/upload/client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/lexicalPluginToLexical/feature.client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/lexicalPluginToLexical/feature.client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/lexicalPluginToLexical/nodes/unknownConvertedNode/index.scss */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/lexicalPluginToLexical/nodes/unknownConvertedNode/index.scss\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/slateToLexical/converter/converters/blockquote/client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/slateToLexical/converter/converters/blockquote/client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/slateToLexical/converter/converters/heading/client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/slateToLexical/converter/converters/heading/client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/slateToLexical/converter/converters/indent/client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/slateToLexical/converter/converters/indent/client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/slateToLexical/converter/converters/link/client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/slateToLexical/converter/converters/link/client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/slateToLexical/converter/converters/listItem/client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/slateToLexical/converter/converters/listItem/client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/slateToLexical/converter/converters/orderedList/client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/slateToLexical/converter/converters/orderedList/client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/slateToLexical/converter/converters/relationship/client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/slateToLexical/converter/converters/relationship/client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/slateToLexical/converter/converters/unknown/client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/slateToLexical/converter/converters/unknown/client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/slateToLexical/converter/converters/unorderedList/client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/slateToLexical/converter/converters/unorderedList/client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/slateToLexical/converter/converters/upload/client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/slateToLexical/converter/converters/upload/client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/slateToLexical/feature.client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/slateToLexical/feature.client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/slateToLexical/nodes/unknownConvertedNode/index.scss */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/migrations/slateToLexical/nodes/unknownConvertedNode/index.scss\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/paragraph/feature.client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/paragraph/feature.client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/relationship/feature.client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/relationship/feature.client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/relationship/nodes/components/RelationshipComponent.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/relationship/nodes/components/RelationshipComponent.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/toolbars/fixed/feature.client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/toolbars/fixed/feature.client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/toolbars/inline/feature.client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/toolbars/inline/feature.client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/upload/component/index.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/upload/component/index.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/features/upload/feature.client.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/features/upload/feature.client.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/index.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/index.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/lexical/config/client/EditorConfigProvider.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/lexical/config/client/EditorConfigProvider.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/lexical/config/client/sanitize.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/lexical/config/client/sanitize.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/lexical/plugins/SlashMenu/LexicalTypeaheadMenuPlugin/index.js */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/lexical/plugins/SlashMenu/LexicalTypeaheadMenuPlugin/index.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/richtext-lexical/dist/field/lexical/theme/EditorTheme.scss */ \"(app-pages-browser)/./node_modules/@payloadcms/richtext-lexical/dist/field/lexical/theme/EditorTheme.scss\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/ui/dist/elements/ViewDescription/index.js */ \"(app-pages-browser)/./node_modules/@payloadcms/ui/dist/elements/ViewDescription/index.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/ui/dist/fields/HiddenInput/index.js */ \"(app-pages-browser)/./node_modules/@payloadcms/ui/dist/fields/HiddenInput/index.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/@payloadcms/ui/dist/forms/FieldDescription/index.js */ \"(app-pages-browser)/./node_modules/@payloadcms/ui/dist/forms/FieldDescription/index.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/components/HeroImageRight/HeroImageRight.tsx */ \"(app-pages-browser)/./src/components/HeroImageRight/HeroImageRight.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Fcell%2Findex.js%22%2C%22ids%22%3A%5B%22RichTextCell%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Falign%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22AlignFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fblockquote%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22BlockquoteFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fblocks%2Fcomponent%2Findex.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fblocks%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22BlocksFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fdebug%2FtestRecorder%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22TestRecorderFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fdebug%2FtreeView%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22TreeViewFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fformat%2Fbold%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22BoldFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fformat%2FinlineCode%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22InlineCodeFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fformat%2Fitalic%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22ItalicFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fformat%2Fstrikethrough%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22StrikethroughFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fformat%2Fsubscript%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22SubscriptFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fformat%2Fsuperscript%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22SuperscriptFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fformat%2Funderline%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22UnderlineFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fheading%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22HeadingFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2FhorizontalRule%2Fcomponent%2Findex.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2FhorizontalRule%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22HorizontalRuleFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Findent%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22IndentFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Flink%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22LinkFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Flists%2Fchecklist%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22ChecklistFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Flists%2ForderedList%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22OrderedListFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Flists%2FunorderedList%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22UnorderedListFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FlexicalPluginToLexical%2Fconverter%2Fconverters%2Fheading%2Fclient.js%22%2C%22ids%22%3A%5B%22HeadingConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FlexicalPluginToLexical%2Fconverter%2Fconverters%2Flink%2Fclient.js%22%2C%22ids%22%3A%5B%22LinkConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FlexicalPluginToLexical%2Fconverter%2Fconverters%2Flist%2Fclient.js%22%2C%22ids%22%3A%5B%22ListConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FlexicalPluginToLexical%2Fconverter%2Fconverters%2FlistItem%2Fclient.js%22%2C%22ids%22%3A%5B%22ListItemConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FlexicalPluginToLexical%2Fconverter%2Fconverters%2Fquote%2Fclient.js%22%2C%22ids%22%3A%5B%22QuoteConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FlexicalPluginToLexical%2Fconverter%2Fconverters%2Funknown%2Fclient.js%22%2C%22ids%22%3A%5B%22UnknownConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FlexicalPluginToLexical%2Fconverter%2Fconverters%2Fupload%2Fclient.js%22%2C%22ids%22%3A%5B%22UploadConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FlexicalPluginToLexical%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22LexicalPluginToLexicalFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FlexicalPluginToLexical%2Fnodes%2FunknownConvertedNode%2Findex.scss%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FslateToLexical%2Fconverter%2Fconverters%2Fblockquote%2Fclient.js%22%2C%22ids%22%3A%5B%22BlockquoteConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FslateToLexical%2Fconverter%2Fconverters%2Fheading%2Fclient.js%22%2C%22ids%22%3A%5B%22HeadingConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FslateToLexical%2Fconverter%2Fconverters%2Findent%2Fclient.js%22%2C%22ids%22%3A%5B%22IndentConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FslateToLexical%2Fconverter%2Fconverters%2Flink%2Fclient.js%22%2C%22ids%22%3A%5B%22LinkConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FslateToLexical%2Fconverter%2Fconverters%2FlistItem%2Fclient.js%22%2C%22ids%22%3A%5B%22ListItemConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FslateToLexical%2Fconverter%2Fconverters%2ForderedList%2Fclient.js%22%2C%22ids%22%3A%5B%22OrderedListConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FslateToLexical%2Fconverter%2Fconverters%2Frelationship%2Fclient.js%22%2C%22ids%22%3A%5B%22RelationshipConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FslateToLexical%2Fconverter%2Fconverters%2Funknown%2Fclient.js%22%2C%22ids%22%3A%5B%22UnknownConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FslateToLexical%2Fconverter%2Fconverters%2FunorderedList%2Fclient.js%22%2C%22ids%22%3A%5B%22UnorderedListConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FslateToLexical%2Fconverter%2Fconverters%2Fupload%2Fclient.js%22%2C%22ids%22%3A%5B%22UploadConverterClient%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FslateToLexical%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22SlateToLexicalFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fmigrations%2FslateToLexical%2Fnodes%2FunknownConvertedNode%2Findex.scss%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fparagraph%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22ParagraphFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Frelationship%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22RelationshipFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Frelationship%2Fnodes%2Fcomponents%2FRelationshipComponent.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Ftoolbars%2Ffixed%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22FixedToolbarFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Ftoolbars%2Finline%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22InlineToolbarFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fupload%2Fcomponent%2Findex.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Ffeatures%2Fupload%2Ffeature.client.js%22%2C%22ids%22%3A%5B%22UploadFeatureClientComponent%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Findex.js%22%2C%22ids%22%3A%5B%22RichTextField%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Flexical%2Fconfig%2Fclient%2FEditorConfigProvider.js%22%2C%22ids%22%3A%5B%22EditorConfigProvider%22%2C%22useEditorConfigContext%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Flexical%2Fconfig%2Fclient%2Fsanitize.js%22%2C%22ids%22%3A%5B%22sanitizeClientEditorConfig%22%2C%22sanitizeClientFeatures%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Flexical%2Fplugins%2FSlashMenu%2FLexicalTypeaheadMenuPlugin%2Findex.js%22%2C%22ids%22%3A%5B%22ENABLE_SLASH_MENU_COMMAND%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Frichtext-lexical%2Fdist%2Ffield%2Flexical%2Ftheme%2FEditorTheme.scss%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Fui%2Fdist%2Felements%2FViewDescription%2Findex.js%22%2C%22ids%22%3A%5B%22*%22%2C%22ViewDescription%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Fui%2Fdist%2Ffields%2FHiddenInput%2Findex.js%22%2C%22ids%22%3A%5B%22HiddenInput%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fnode_modules%2F%40payloadcms%2Fui%2Fdist%2Fforms%2FFieldDescription%2Findex.js%22%2C%22ids%22%3A%5B%22FieldDescription%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fjesus%2FDocuments%2Fbrown_code%2Fserre-lab-site%2Fsrc%2Fcomponents%2FHeroImageRight%2FHeroImageRight.tsx%22%2C%22ids%22%3A%5B%22HeroImageRight%22%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/HeroImageRight/HeroImageRight.tsx":
/*!**********************************************************!*\
  !*** ./src/components/HeroImageRight/HeroImageRight.tsx ***!
  \**********************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HeroImageRight: () => (/* binding */ HeroImageRight)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _mantine_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @mantine/core */ \"(app-pages-browser)/./node_modules/@mantine/core/esm/components/Container/Container.mjs\");\n/* harmony import */ var _mantine_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @mantine/core */ \"(app-pages-browser)/./node_modules/@mantine/core/esm/components/Title/Title.mjs\");\n/* harmony import */ var _mantine_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @mantine/core */ \"(app-pages-browser)/./node_modules/@mantine/core/esm/components/Text/Text.mjs\");\n/* harmony import */ var _mantine_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @mantine/core */ \"(app-pages-browser)/./node_modules/@mantine/core/esm/components/Button/Button.mjs\");\n/* harmony import */ var _HeroImageRight_module_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./HeroImageRight.module.css */ \"(app-pages-browser)/./src/components/HeroImageRight/HeroImageRight.module.css\");\n/* harmony import */ var _HeroImageRight_module_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_HeroImageRight_module_css__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ HeroImageRight auto */ \n\n\nfunction HeroImageRight() {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: (_HeroImageRight_module_css__WEBPACK_IMPORTED_MODULE_1___default().root),\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mantine_core__WEBPACK_IMPORTED_MODULE_2__.Container, {\n            size: \"lg\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: (_HeroImageRight_module_css__WEBPACK_IMPORTED_MODULE_1___default().inner),\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: (_HeroImageRight_module_css__WEBPACK_IMPORTED_MODULE_1___default().content),\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mantine_core__WEBPACK_IMPORTED_MODULE_3__.Title, {\n                            className: (_HeroImageRight_module_css__WEBPACK_IMPORTED_MODULE_1___default().title),\n                            children: [\n                                \"Understanding the\",\n                                \" \",\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mantine_core__WEBPACK_IMPORTED_MODULE_4__.Text, {\n                                    component: \"span\",\n                                    inherit: true,\n                                    variant: \"gradient\",\n                                    gradient: {\n                                        from: \"pink\",\n                                        to: \"yellow\"\n                                    },\n                                    children: \"neural computations\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/jesus/Documents/brown_code/serre-lab-site/src/components/HeroImageRight/HeroImageRight.tsx\",\n                                    lineNumber: 13,\n                                    columnNumber: 15\n                                }, this),\n                                \" \",\n                                \"supporting visual perception\"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/jesus/Documents/brown_code/serre-lab-site/src/components/HeroImageRight/HeroImageRight.tsx\",\n                            lineNumber: 11,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mantine_core__WEBPACK_IMPORTED_MODULE_4__.Text, {\n                            className: (_HeroImageRight_module_css__WEBPACK_IMPORTED_MODULE_1___default().description),\n                            mt: 30,\n                            children: \"There is little doubt that even a partial solution to the question of which computations are carried out by the visual cortex would be a major breakthrough: It would begin to explain one of our most amazing abilities, vision; and it would open doors to other aspects of intelligence such as language, planning or reasoning. It would also help connect neurobiology and mathematics, making it possible to develop computer algorithms that follow the information processing principles used by biological organisms and honed by natural evolution.\"\n                        }, void 0, false, {\n                            fileName: \"/Users/jesus/Documents/brown_code/serre-lab-site/src/components/HeroImageRight/HeroImageRight.tsx\",\n                            lineNumber: 24,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mantine_core__WEBPACK_IMPORTED_MODULE_5__.Button, {\n                            variant: \"gradient\",\n                            gradient: {\n                                from: \"pink\",\n                                to: \"yellow\"\n                            },\n                            size: \"xl\",\n                            className: (_HeroImageRight_module_css__WEBPACK_IMPORTED_MODULE_1___default().control),\n                            mt: 40,\n                            children: \"Get started\"\n                        }, void 0, false, {\n                            fileName: \"/Users/jesus/Documents/brown_code/serre-lab-site/src/components/HeroImageRight/HeroImageRight.tsx\",\n                            lineNumber: 29,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/jesus/Documents/brown_code/serre-lab-site/src/components/HeroImageRight/HeroImageRight.tsx\",\n                    lineNumber: 10,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/jesus/Documents/brown_code/serre-lab-site/src/components/HeroImageRight/HeroImageRight.tsx\",\n                lineNumber: 9,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"/Users/jesus/Documents/brown_code/serre-lab-site/src/components/HeroImageRight/HeroImageRight.tsx\",\n            lineNumber: 8,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/jesus/Documents/brown_code/serre-lab-site/src/components/HeroImageRight/HeroImageRight.tsx\",\n        lineNumber: 7,\n        columnNumber: 5\n    }, this);\n}\n_c = HeroImageRight;\nvar _c;\n$RefreshReg$(_c, \"HeroImageRight\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL0hlcm9JbWFnZVJpZ2h0L0hlcm9JbWFnZVJpZ2h0LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFDK0Q7QUFDYjtBQUUzQyxTQUFTSztJQUNkLHFCQUNFLDhEQUFDQztRQUFJQyxXQUFXSCx3RUFBWTtrQkFDMUIsNEVBQUNKLG9EQUFTQTtZQUFDUyxNQUFLO3NCQUNkLDRFQUFDSDtnQkFBSUMsV0FBV0gseUVBQWE7MEJBQzNCLDRFQUFDRTtvQkFBSUMsV0FBV0gsMkVBQWU7O3NDQUM3Qiw4REFBQ0gsZ0RBQUtBOzRCQUFDTSxXQUFXSCx5RUFBYTs7Z0NBQUU7Z0NBQ2I7OENBQ2xCLDhEQUFDRiwrQ0FBSUE7b0NBQ0hXLFdBQVU7b0NBQ1ZDLE9BQU87b0NBQ1BDLFNBQVE7b0NBQ1JDLFVBQVU7d0NBQUVDLE1BQU07d0NBQVFDLElBQUk7b0NBQVM7OENBQ3hDOzs7Ozs7Z0NBRU87Z0NBQUk7Ozs7Ozs7c0NBSWQsOERBQUNoQiwrQ0FBSUE7NEJBQUNLLFdBQVdILCtFQUFtQjs0QkFBRWdCLElBQUk7c0NBQUk7Ozs7OztzQ0FLOUMsOERBQUNqQixpREFBTUE7NEJBQ0xZLFNBQVE7NEJBQ1JDLFVBQVU7Z0NBQUVDLE1BQU07Z0NBQVFDLElBQUk7NEJBQVM7NEJBQ3ZDVCxNQUFLOzRCQUNMRixXQUFXSCwyRUFBZTs0QkFDMUJnQixJQUFJO3NDQUNMOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFRYjtLQXRDZ0JmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9jb21wb25lbnRzL0hlcm9JbWFnZVJpZ2h0L0hlcm9JbWFnZVJpZ2h0LnRzeD85ZDA5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50JztcbmltcG9ydCB7IENvbnRhaW5lciwgVGl0bGUsIFRleHQsIEJ1dHRvbiB9IGZyb20gJ0BtYW50aW5lL2NvcmUnO1xuaW1wb3J0IGNsYXNzZXMgZnJvbSAnLi9IZXJvSW1hZ2VSaWdodC5tb2R1bGUuY3NzJztcblxuZXhwb3J0IGZ1bmN0aW9uIEhlcm9JbWFnZVJpZ2h0KCkge1xuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc2VzLnJvb3R9PlxuICAgICAgPENvbnRhaW5lciBzaXplPVwibGdcIj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e2NsYXNzZXMuaW5uZXJ9PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc2VzLmNvbnRlbnR9PlxuICAgICAgICAgICAgPFRpdGxlIGNsYXNzTmFtZT17Y2xhc3Nlcy50aXRsZX0+XG4gICAgICAgICAgICAgIFVuZGVyc3RhbmRpbmcgdGhleycgJ31cbiAgICAgICAgICAgICAgPFRleHRcbiAgICAgICAgICAgICAgICBjb21wb25lbnQ9XCJzcGFuXCJcbiAgICAgICAgICAgICAgICBpbmhlcml0XG4gICAgICAgICAgICAgICAgdmFyaWFudD1cImdyYWRpZW50XCJcbiAgICAgICAgICAgICAgICBncmFkaWVudD17eyBmcm9tOiAncGluaycsIHRvOiAneWVsbG93JyB9fVxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgbmV1cmFsIGNvbXB1dGF0aW9uc1xuICAgICAgICAgICAgICA8L1RleHQ+eycgJ31cbiAgICAgICAgICAgICAgc3VwcG9ydGluZyB2aXN1YWwgcGVyY2VwdGlvblxuICAgICAgICAgICAgPC9UaXRsZT5cblxuICAgICAgICAgICAgPFRleHQgY2xhc3NOYW1lPXtjbGFzc2VzLmRlc2NyaXB0aW9ufSBtdD17MzB9PlxuICAgICAgICAgICAgVGhlcmUgaXMgbGl0dGxlIGRvdWJ0IHRoYXQgZXZlbiBhIHBhcnRpYWwgc29sdXRpb24gdG8gdGhlIHF1ZXN0aW9uIG9mIHdoaWNoIGNvbXB1dGF0aW9ucyBhcmUgY2FycmllZCBvdXQgYnkgdGhlIHZpc3VhbCBjb3J0ZXggd291bGQgYmUgYSBtYWpvciBicmVha3Rocm91Z2g6IEl0IHdvdWxkIGJlZ2luIHRvIGV4cGxhaW4gb25lIG9mIG91ciBtb3N0IGFtYXppbmcgYWJpbGl0aWVzLCB2aXNpb247IGFuZCBpdCB3b3VsZCBvcGVuIGRvb3JzIHRvIG90aGVyIGFzcGVjdHMgb2YgaW50ZWxsaWdlbmNlIHN1Y2ggYXMgbGFuZ3VhZ2UsIHBsYW5uaW5nIG9yIHJlYXNvbmluZy4gSXQgd291bGQgYWxzbyBoZWxwIGNvbm5lY3QgbmV1cm9iaW9sb2d5IGFuZCBtYXRoZW1hdGljcywgbWFraW5nIGl0IHBvc3NpYmxlIHRvIGRldmVsb3AgY29tcHV0ZXIgYWxnb3JpdGhtcyB0aGF0IGZvbGxvdyB0aGUgaW5mb3JtYXRpb24gcHJvY2Vzc2luZyBwcmluY2lwbGVzIHVzZWQgYnkgYmlvbG9naWNhbCBvcmdhbmlzbXMgYW5kIGhvbmVkIGJ5IG5hdHVyYWwgZXZvbHV0aW9uLlxuXG4gICAgICAgICAgICA8L1RleHQ+XG5cbiAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgdmFyaWFudD1cImdyYWRpZW50XCJcbiAgICAgICAgICAgICAgZ3JhZGllbnQ9e3sgZnJvbTogJ3BpbmsnLCB0bzogJ3llbGxvdycgfX1cbiAgICAgICAgICAgICAgc2l6ZT1cInhsXCJcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPXtjbGFzc2VzLmNvbnRyb2x9XG4gICAgICAgICAgICAgIG10PXs0MH1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgR2V0IHN0YXJ0ZWRcbiAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvQ29udGFpbmVyPlxuICAgIDwvZGl2PlxuICApO1xufVxuIl0sIm5hbWVzIjpbIkNvbnRhaW5lciIsIlRpdGxlIiwiVGV4dCIsIkJ1dHRvbiIsImNsYXNzZXMiLCJIZXJvSW1hZ2VSaWdodCIsImRpdiIsImNsYXNzTmFtZSIsInJvb3QiLCJzaXplIiwiaW5uZXIiLCJjb250ZW50IiwidGl0bGUiLCJjb21wb25lbnQiLCJpbmhlcml0IiwidmFyaWFudCIsImdyYWRpZW50IiwiZnJvbSIsInRvIiwiZGVzY3JpcHRpb24iLCJtdCIsImNvbnRyb2wiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/HeroImageRight/HeroImageRight.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// as a normal prop instead of stripping it from the props object.\n// Passes `ref` as a normal prop instead of stripping it from the props object\n// during element creation.\n\nvar enableRefAsProp = true;\n\nvar enableRenderableContext = true; // Enables the `initialValue` option for `useDeferredValue`\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false;\n\nvar REACT_ELEMENT_TYPE = Symbol.for('react.transitional.element') ;\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider'); // TODO: Delete with enableRenderableContext\n\nvar REACT_CONSUMER_TYPE = Symbol.for('react.consumer');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var stack = ReactSharedInternals.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n}\n\nvar REACT_CLIENT_REFERENCE$2 = Symbol.for('react.client.reference'); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  if (typeof type === 'function') {\n    if (type.$$typeof === REACT_CLIENT_REFERENCE$2) {\n      // TODO: Create a convention for naming client references with debug info.\n      return null;\n    }\n\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    {\n      if (typeof type.tag === 'number') {\n        error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n      }\n    }\n\n    switch (type.$$typeof) {\n      case REACT_PROVIDER_TYPE:\n        {\n          return null;\n        }\n\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n\n        {\n          return getContextName(context) + '.Provider';\n        }\n\n      case REACT_CONSUMER_TYPE:\n        {\n          var consumer = type;\n          return getContextName(consumer._context) + '.Consumer';\n        }\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar assign = Object.assign;\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n    return type;\n  }\n} // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || !enableRenderableContext  || type.$$typeof === REACT_CONSUMER_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar prefix;\nfunction describeBuiltInComponentFrame(name) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n/**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */\n\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher = null;\n\n  {\n    previousDispatcher = ReactSharedInternals.H; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactSharedInternals.H = null;\n    disableLogs();\n  }\n  /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */\n\n\n  var RunInRootFrame = {\n    DetermineComponentFrameRoot: function () {\n      var control;\n\n      try {\n        // This should throw.\n        if (construct) {\n          // Something should be setting the props in the constructor.\n          var Fake = function () {\n            throw Error();\n          }; // $FlowFixMe[prop-missing]\n\n\n          Object.defineProperty(Fake.prototype, 'props', {\n            set: function () {\n              // We use a throwing setter instead of frozen or non-writable props\n              // because that won't throw in a non-strict mode function.\n              throw Error();\n            }\n          });\n\n          if (typeof Reflect === 'object' && Reflect.construct) {\n            // We construct a different control for this case to include any extra\n            // frames added by the construct call.\n            try {\n              Reflect.construct(Fake, []);\n            } catch (x) {\n              control = x;\n            }\n\n            Reflect.construct(fn, [], Fake);\n          } else {\n            try {\n              Fake.call();\n            } catch (x) {\n              control = x;\n            } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n            fn.call(Fake.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (x) {\n            control = x;\n          } // TODO(luna): This will currently only throw if the function component\n          // tries to access React/ReactDOM/props. We should probably make this throw\n          // in simple components too\n\n\n          var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n          // component, which we don't yet support. Attach a noop catch handler to\n          // silence the error.\n          // TODO: Implement component stacks for async client components?\n\n          if (maybePromise && typeof maybePromise.catch === 'function') {\n            maybePromise.catch(function () {});\n          }\n        }\n      } catch (sample) {\n        // This is inlined manually because closure doesn't do it for us.\n        if (sample && control && typeof sample.stack === 'string') {\n          return [sample.stack, control.stack];\n        }\n      }\n\n      return [null, null];\n    }\n  }; // $FlowFixMe[prop-missing]\n\n  RunInRootFrame.DetermineComponentFrameRoot.displayName = 'DetermineComponentFrameRoot';\n  var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, 'name'); // Before ES6, the `name` property was not configurable.\n\n  if (namePropDescriptor && namePropDescriptor.configurable) {\n    // V8 utilizes a function's `name` property when generating a stack trace.\n    Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // Configurable properties can be updated even if its writable descriptor\n    // is set to `false`.\n    // $FlowFixMe[cannot-write]\n    'name', {\n      value: 'DetermineComponentFrameRoot'\n    });\n  }\n\n  try {\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n        sampleStack = _RunInRootFrame$Deter[0],\n        controlStack = _RunInRootFrame$Deter[1];\n\n    if (sampleStack && controlStack) {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sampleStack.split('\\n');\n      var controlLines = controlStack.split('\\n');\n      var s = 0;\n      var c = 0;\n\n      while (s < sampleLines.length && !sampleLines[s].includes('DetermineComponentFrameRoot')) {\n        s++;\n      }\n\n      while (c < controlLines.length && !controlLines[c].includes('DetermineComponentFrameRoot')) {\n        c++;\n      } // We couldn't find our intentionally injected common root frame, attempt\n      // to find another common root frame by search from the bottom of the\n      // control stack...\n\n\n      if (s === sampleLines.length || c === controlLines.length) {\n        s = sampleLines.length - 1;\n        c = controlLines.length - 1;\n\n        while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n          // We expect at least one stack frame to be shared.\n          // Typically this will be the root most one. However, stack frames may be\n          // cut off due to maximum stack limits. In this case, one maybe cut off\n          // earlier than the other. We assume that the sample is longer or the same\n          // and there for cut off earlier. So we should find the root most frame in\n          // the sample somewhere in the control.\n          c--;\n        }\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                if (true) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactSharedInternals.H = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload));\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\n\nfunction getOwner() {\n  {\n    var dispatcher = ReactSharedInternals.A;\n\n    if (dispatcher === null) {\n      return null;\n    }\n\n    return dispatcher.getOwner();\n  }\n}\n\nvar specialPropKeyWarningShown;\nvar didWarnAboutElementRef;\n\n{\n  didWarnAboutElementRef = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://react.dev/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction elementRefGetterWithDeprecationWarning() {\n  {\n    var componentName = getComponentNameFromType(this.type);\n\n    if (!didWarnAboutElementRef[componentName]) {\n      didWarnAboutElementRef[componentName] = true;\n\n      error('Accessing element.ref was removed in React 19. ref is now a ' + 'regular prop. It will be removed from the JSX Element ' + 'type in a future release.');\n    } // An undefined `element.ref` is coerced to `null` for\n    // backwards compatibility.\n\n\n    var refProp = this.props.ref;\n    return refProp !== undefined ? refProp : null;\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.transitional.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nfunction ReactElement(type, key, _ref, self, source, owner, props) {\n  var ref;\n\n  {\n    // When enableRefAsProp is on, ignore whatever was passed as the ref\n    // argument and treat `props.ref` as the source of truth. The only thing we\n    // use this for is `element.ref`, which will log a deprecation warning on\n    // access. In the next release, we can remove `element.ref` as well as the\n    // `ref` argument.\n    var refProp = props.ref; // An undefined `element.ref` is coerced to `null` for\n    // backwards compatibility.\n\n    ref = refProp !== undefined ? refProp : null;\n  }\n\n  var element;\n\n  {\n    // In dev, make `ref` a non-enumerable property with a warning. It's non-\n    // enumerable so that test matchers and serializers don't access it and\n    // trigger the warning.\n    //\n    // `ref` will be removed from the element completely in a future release.\n    element = {\n      // This tag allows us to uniquely identify this as a React Element\n      $$typeof: REACT_ELEMENT_TYPE,\n      // Built-in properties that belong on the element\n      type: type,\n      key: key,\n      props: props,\n      // Record the component responsible for creating this element.\n      _owner: owner\n    };\n\n    if (ref !== null) {\n      Object.defineProperty(element, 'ref', {\n        enumerable: false,\n        get: elementRefGetterWithDeprecationWarning\n      });\n    } else {\n      // Don't warn on access if a ref is not given. This reduces false\n      // positives in cases where a test serializer uses\n      // getOwnPropertyDescriptors to compare objects, like Jest does, which is\n      // a problem because it bypasses non-enumerability.\n      //\n      // So unfortunately this will trigger a false positive warning in Jest\n      // when the diff is printed:\n      //\n      //   expect(<div ref={ref} />).toEqual(<span ref={ref} />);\n      //\n      // A bit sketchy, but this is what we've done for the `props.key` and\n      // `props.ref` accessors for years, which implies it will be good enough\n      // for `element.ref`, too. Let's see if anyone complains.\n      Object.defineProperty(element, 'ref', {\n        enumerable: false,\n        value: null\n      });\n    }\n  }\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // debugInfo contains Server Component debug information.\n\n    Object.defineProperty(element, '_debugInfo', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: null\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\nvar didWarnAboutKeySpread = {};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV$1(type, config, maybeKey, isStaticChildren, source, self) {\n  {\n    if (!isValidElementType(type)) {\n      // This is an invalid element type.\n      //\n      // We warn in this case but don't throw. We expect the element creation to\n      // succeed and there will likely be errors in render.\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    } else {\n      // This is a valid element type.\n      // Skip key warning if the type isn't valid since our key validation logic\n      // doesn't expect a non-string/function type and can throw confusing\n      // errors. We don't want exception behavior to differ between dev and\n      // prod. (Rendering will throw with a helpful message and as soon as the\n      // type is fixed, the key warnings will appear.)\n      var children = config.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    } // Warn about key spread regardless of whether the type is valid.\n\n\n    if (hasOwnProperty.call(config, 'key')) {\n      var componentName = getComponentNameFromType(type);\n      var keys = Object.keys(config).filter(function (k) {\n        return k !== 'key';\n      });\n      var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) ;\n\n    var props;\n\n    if (!('key' in config)) {\n      // If key was not spread in, we can reuse the original props object. This\n      // only works for `jsx`, not `createElement`, because `jsx` is a compiler\n      // target and the compiler always passes a new object. For `createElement`,\n      // we can't assume a new object is passed every time because it can be\n      // called manually.\n      //\n      // Spreading key is a warning in dev. In a future release, we will not\n      // remove a spread key from the props object. (But we'll still warn.) We'll\n      // always pass the object straight through.\n      props = config;\n    } else {\n      // We need to remove reserved props (key, prop, ref). Create a fresh props\n      // object and copy over all the non-reserved props. We don't use `delete`\n      // because in V8 it will deopt the object to dictionary mode.\n      props = {};\n\n      for (var propName in config) {\n        // Skip over reserved prop names\n        if (propName !== 'key' && (enableRefAsProp )) {\n          {\n            props[propName] = config[propName];\n          }\n        }\n      }\n    }\n\n    if (key || !enableRefAsProp ) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n    }\n\n    var element = ReactElement(type, key, ref, self, source, getOwner(), props);\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    }\n\n    return element;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    var owner = getOwner();\n\n    if (owner) {\n      var name = getComponentNameFromType(owner.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) ; else if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n\n          if (iterator !== node) {\n            var step;\n\n            while (!(step = iterator.next()).done) {\n              if (isValidElement(step.value)) {\n                validateExplicitKey(step.value, parentType);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nvar ownerHasKeyUseWarning = {};\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner != null && element._owner !== getOwner()) {\n      var ownerName = null;\n\n      if (typeof element._owner.tag === 'number') {\n        ownerName = getComponentNameFromType(element._owner.type);\n      } else if (typeof element._owner.name === 'string') {\n        ownerName = element._owner.name;\n      } // Give the component that originally created this child.\n\n\n      childOwner = \" It was passed a child from \" + ownerName + \".\";\n    }\n\n    setCurrentlyValidatingElement(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://react.dev/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var stack = describeUnknownElementTypeFrameInDEV(element.type);\n      ReactSharedInternals.setExtraStackFrame(stack);\n    } else {\n      ReactSharedInternals.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = getComponentNameFromType(parentType);\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  // TODO: Move this to render phase instead of at element creation.\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n  }\n}\n\nvar jsxDEV = jsxDEV$1 ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanM/ZTY1NiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ })

});